<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <%- include('partials/head') %>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
</head>
<body class="bg-black text-white">
    <!-- <a href="#main-content" class="skip-link">Skip to main content</a>image.pngimage.png -->

    <!-- Main layout grid -->
    <div class="flex justify-center">
        <div class="grid grid-cols-12 min-h-screen justify-center w-full  w-full">
            <!-- Left Sidebar - Hidden on mobile -->
            <div class="hidden md:block col-span-3 sticky top-0 h-screen overflow-y-auto px-4 pl-14">
                <%- include('partials/sidebar', { activePage, req: req || {} }) %>
            </div>

            <!-- Main Content - Full width on mobile -->
            <div id="main-content" class="col-span-12 md:col-span-6 border-x border-gray-800 min-h-screen">
                <%- body %>
            </div>

            <!-- Right Sidebar - Hidden on mobile and smaller screens -->
            <div class="hidden lg:block col-span-3 sticky top-0 h-screen overflow-y-auto pl-8" style="min-width: 350px;">
                <%- include('partials/rightbar', {
                    trendingHashtags: locals.trendingHashtags || [],
                    suggestedUsers: locals.suggestedUsers || []
                }) %>
            </div>
        </div>
    </div>

    <!-- Mobile Navigation - Visible only on mobile -->
    <%- include('partials/mobile-nav', { activePage, req: req || {} }) %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
    <script src="https://cdn.socket.io/4.6.0/socket.io.min.js"></script>
    <script src="/js/main.js"></script>

    <% if (req && req.isAuthenticated && req.isAuthenticated()) { %>
    <script>
        // Connect to Socket.io server
        const socket = io();

        // Join user's notification room
        socket.emit('join', '<%= req.user._id %>');

        // Listen for notifications
        socket.on('notification', function(data) {
            // Update notification badge
            const notificationBadge = document.querySelector('.notification-badge');
            if (notificationBadge) {
                notificationBadge.style.display = 'flex';
            }

            // Show a toast notification (optional)
            // This would require adding a toast notification library
        });

        // Listen for messages
        socket.on('messageNotification', function(data) {
            // Update message badge
            const messageBadge = document.querySelector('.message-badge');
            if (messageBadge) {
                messageBadge.style.display = 'flex';
            }
        });

        // Check for unread notifications on page load
        fetch('/notifications/unread/count')
            .then(response => response.json())
            .then(data => {
                if (data.count > 0) {
                    const notificationBadge = document.querySelector('.notification-badge');
                    if (notificationBadge) {
                        notificationBadge.style.display = 'flex';
                    }
                }
            });

        // Check for unread messages on page load
        fetch('/messages/unread/count')
            .then(response => response.json())
            .then(data => {
                if (data.count > 0) {
                    const messageBadge = document.querySelector('.message-badge');
                    if (messageBadge) {
                        messageBadge.style.display = 'flex';
                    }
                }
            });
    </script>
    <% } %>
</body>
</html>