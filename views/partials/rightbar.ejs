<div class="py-3 px-4 lg:px-0">
    <!-- Search -->
    <div class="sticky top-0 bg-black pb-3 z-10">
        <div class="relative mb-4">
            <form action="/search" method="GET" id="global-search-form">
                <i class="fa-solid fa-magnifying-glass absolute left-3 top-3 text-gray-500"></i>
                <input type="text" name="q" id="global-search" placeholder="Search" class="w-full bg-gray-900 rounded-full py-2 pl-10 pr-4 focus:outline-none focus:ring-1 focus:ring-blue-500 transition-all duration-200">
                <button type="submit" class="hidden">Search</button>
            </form>
            <div id="search-dropdown" class="absolute w-full bg-black border border-gray-800 rounded-xl mt-1 shadow-lg hidden z-20 max-h-96 overflow-y-auto"></div>
        </div>
    </div>

    <!-- Premium -->
    <div class="bg-gray-900 rounded-2xl mb-4 p-4">
        <h3 class="text-xl font-bold mb-2">Subscribe to Premium</h3>
        <p class="mb-3">Subscribe to unlock new features and if eligible, receive a share of ads revenue.</p>
        <button class="bg-blue-500 hover:bg-blue-600 text-white rounded-full px-4 py-2 font-bold transition-colors">Subscribe</button>
    </div>

    <!-- Trending -->
    <div class="bg-gray-900 rounded-2xl mb-4">
        <div class="flex justify-between items-center p-4">
            <h3 class="text-xl font-bold">Trending in Nepal</h3>
            <button class="text-gray-500 hover:text-white p-2 rounded-full hover:bg-gray-800 transition-colors" title="Refresh">
                <i class="fa-solid fa-arrows-rotate"></i>
            </button>
        </div>

        <% if (typeof trendingHashtags !== 'undefined' && trendingHashtags && trendingHashtags.length > 0) { %>
            <% trendingHashtags.forEach(hashtag => { %>
                <a href="/search?q=%23<%= hashtag.name %>" class="block p-4 hover:bg-gray-800 transition-colors cursor-pointer">
                    <p class="text-gray-500 text-sm">Trending in Nepal</p>
                    <p class="font-bold text-base">#<%= hashtag.name %></p>
                    <p class="text-gray-500 text-sm"><%= hashtag.count %> posts</p>
                </a>
            <% }); %>
        <% } else { %>
            <!-- Static trending content as fallback -->
            <div class="p-4 hover:bg-gray-800 transition-colors cursor-pointer">
                <p class="text-gray-500 text-sm">Trending in Nepal</p>
                <p class="font-bold text-base">#academicconferences</p>
                <p class="text-gray-500 text-sm">1,543 posts</p>
            </div>

            <div class="p-4 hover:bg-gray-800 transition-colors cursor-pointer">
                <p class="text-gray-500 text-sm">Business & finance · Trending</p>
                <p class="font-bold text-base">BIMSTEC Summit</p>
                <p class="text-gray-500 text-sm">17.8K posts</p>
            </div>

            <div class="p-4 hover:bg-gray-800 transition-colors cursor-pointer">
                <p class="text-gray-500 text-sm">Sports · Trending</p>
                <p class="font-bold text-base">Nepal vs India</p>
                <p class="text-gray-500 text-sm">24.2K posts</p>
            </div>

            <div class="p-4 hover:bg-gray-800 transition-colors cursor-pointer">
                <p class="text-gray-500 text-sm">Technology · Trending</p>
                <p class="font-bold text-base">#technepal</p>
                <p class="text-gray-500 text-sm">3,782 posts</p>
            </div>
        <% } %>

        <a href="/explore/trends" class="block p-4 text-blue-500 hover:bg-gray-800 transition-colors rounded-b-2xl">Show more</a>
    </div>

    <!-- Who to follow -->
    <div class="bg-gray-900 rounded-2xl mb-4">
        <div class="flex justify-between items-center p-4">
            <h3 class="text-xl font-bold">Who to follow</h3>
            <button id="refresh-suggestions" class="text-gray-500 hover:text-white p-2 rounded-full hover:bg-gray-800 transition-colors" title="Refresh">
                <i class="fa-solid fa-arrows-rotate"></i>
            </button>
        </div>

        <div id="suggested-users-container">
            <% if (typeof suggestedUsers !== 'undefined' && suggestedUsers && suggestedUsers.length > 0) { %>
                <% suggestedUsers.forEach(user => { %>
                    <div class="p-4 hover:bg-gray-800 transition-colors flex items-center justify-between">
                        <a href="/users/<%= user.username %>" class="flex items-center">
                            <img src="<%= user.profileImage %>" alt="<%= user.name %>" class="w-10 h-10 rounded-full mr-3 bg-gray-300 object-cover">
                            <div>
                                <div class="flex items-center">
                                    <span class="font-bold"><%= user.name %></span>
                                    <% if (user.isVerified) { %>
                                        <i class="fa-solid fa-circle-check text-blue-500 text-sm ml-1"></i>
                                    <% } %>
                                </div>
                                <p class="text-gray-500">@<%= user.username %></p>
                            </div>
                        </a>
                        <% if (req.isAuthenticated && req.isAuthenticated()) { %>
                            <% if (req.user.following.includes(user._id)) { %>
                                <form action="/users/<%= user.username %>/unfollow" method="POST" class="follow-form">
                                    <button type="submit" class="bg-transparent border border-gray-600 text-white rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-800">Following</button>
                                </form>
                            <% } else { %>
                                <form action="/users/<%= user.username %>/follow" method="POST" class="follow-form">
                                    <button type="submit" class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</button>
                                </form>
                            <% } %>
                        <% } else { %>
                            <a href="/login" class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</a>
                        <% } %>
                    </div>
                <% }); %>
            <% } else { %>
                <!-- Static suggestions as fallback -->
                <div class="p-4 hover:bg-gray-800 transition-colors flex items-center justify-between">
                    <div class="flex items-center">
                        <img src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png" alt="Profile" class="w-10 h-10 rounded-full mr-3 bg-gray-300 object-cover">
                        <div>
                            <div class="flex items-center">
                                <span class="font-bold">Balen Shah</span>
                                <i class="fa-solid fa-circle-check text-blue-500 text-sm ml-1"></i>
                            </div>
                            <p class="text-gray-500">@ShahBalen</p>
                        </div>
                    </div>
                    <button class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</button>
                </div>

                <div class="p-4 hover:bg-gray-800 transition-colors flex items-center justify-between">
                    <div class="flex items-center">
                        <img src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png" alt="Profile" class="w-10 h-10 rounded-full mr-3 bg-gray-300 object-cover">
                        <div>
                            <div class="flex items-center">
                                <span class="font-bold">Kantipur</span>
                                <i class="fa-solid fa-circle-check text-blue-500 text-sm ml-1"></i>
                            </div>
                            <p class="text-gray-500">@ekantipur_com</p>
                        </div>
                    </div>
                    <button class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</button>
                </div>

                <div class="p-4 hover:bg-gray-800 transition-colors flex items-center justify-between">
                    <div class="flex items-center">
                        <img src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png" alt="Profile" class="w-10 h-10 rounded-full mr-3 bg-gray-300 object-cover">
                        <div>
                            <div class="flex items-center">
                                <span class="font-bold">Sagar Dhakal</span>
                            </div>
                            <p class="text-gray-500">@watersagar</p>
                        </div>
                    </div>
                    <button class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</button>
                </div>
            <% } %>
        </div>

        <a href="/explore/users" class="block p-4 text-blue-500 hover:bg-gray-800 transition-colors rounded-b-2xl">Show more</a>
    </div>

    <!-- Footer -->
    <div class="text-gray-500 text-xs mt-4 flex flex-wrap gap-x-2 mb-8">
        <a href="#" class="hover:underline">Terms of Service</a>
        <a href="#" class="hover:underline">Privacy Policy</a>
        <a href="#" class="hover:underline">Cookie Policy</a>
        <a href="#" class="hover:underline">Accessibility</a>
        <a href="#" class="hover:underline">Ads Info</a>
        <a href="#" class="hover:underline">More...</a>
        <span>© 2023 X Corp.</span>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Global search functionality
        const globalSearch = document.getElementById('global-search');
        const searchDropdown = document.getElementById('search-dropdown');

        if (globalSearch && searchDropdown) {
            globalSearch.addEventListener('focus', function() {
                if (this.value.trim().length > 0) {
                    searchDropdown.classList.remove('hidden');
                }
            });

            globalSearch.addEventListener('input', debounce(async function() {
                const query = this.value.trim();

                if (query.length < 2) {
                    searchDropdown.classList.add('hidden');
                    return;
                }

                searchDropdown.classList.remove('hidden');
                searchDropdown.innerHTML = '<div class="flex justify-center p-4"><div class="animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-blue-500"></div></div>';

                try {
                    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
                    const data = await response.json();

                    if (!data.users.length && !data.tweets.length && !data.hashtags.length) {
                        searchDropdown.innerHTML = '<p class="text-gray-500 p-4 text-center">No results found</p>';
                        return;
                    }

                    let resultsHTML = '';

                    // Users
                    if (data.users.length > 0) {
                        resultsHTML += '<div class="p-2 text-gray-500 text-xs font-bold">People</div>';
                        data.users.slice(0, 3).forEach(user => {
                            resultsHTML += `
                                <a href="/users/${user.username}" class="flex items-center p-3 hover:bg-gray-800 transition-colors">
                                    <img src="${user.profileImage}" alt="${user.name}" class="w-10 h-10 rounded-full mr-3 object-cover">
                                    <div>
                                        <div class="flex items-center">
                                            <span class="font-bold">${user.name}</span>
                                            ${user.isVerified ? '<i class="fa-solid fa-circle-check text-blue-500 text-sm ml-1"></i>' : ''}
                                        </div>
                                        <p class="text-gray-500 text-sm">@${user.username}</p>
                                    </div>
                                </a>
                            `;
                        });
                    }

                    // Hashtags
                    if (data.hashtags.length > 0) {
                        resultsHTML += '<div class="p-2 text-gray-500 text-xs font-bold">Hashtags</div>';
                        data.hashtags.slice(0, 3).forEach(hashtag => {
                            resultsHTML += `
                                <a href="/search?q=%23${hashtag.name}" class="block p-3 hover:bg-gray-800 transition-colors">
                                    <p class="font-bold">#${hashtag.name}</p>
                                    <p class="text-gray-500 text-sm">${hashtag.count} posts</p>
                                </a>
                            `;
                        });
                    }

                    // Tweets
                    if (data.tweets.length > 0) {
                        resultsHTML += '<div class="p-2 text-gray-500 text-xs font-bold">Posts</div>';
                        data.tweets.slice(0, 2).forEach(tweet => {
                            resultsHTML += `
                                <a href="/tweets/${tweet._id}" class="block p-3 hover:bg-gray-800 transition-colors">
                                    <div class="flex items-center mb-1">
                                        <img src="${tweet.user.profileImage}" alt="${tweet.user.name}" class="w-6 h-6 rounded-full mr-2 object-cover">
                                        <span class="font-bold text-sm">${tweet.user.name}</span>
                                        <span class="text-gray-500 text-xs ml-1">@${tweet.user.username}</span>
                                    </div>
                                    <p class="text-sm line-clamp-2">${tweet.content}</p>
                                </a>
                            `;
                        });
                    }

                    resultsHTML += `
                        <a href="/search?q=${encodeURIComponent(query)}" class="block p-3 text-blue-500 hover:bg-gray-800 transition-colors text-center border-t border-gray-800">
                            View all results
                        </a>
                    `;

                    searchDropdown.innerHTML = resultsHTML;

                } catch (error) {
                    console.error('Error searching:', error);
                    searchDropdown.innerHTML = '<p class="text-red-500 p-4 text-center">Error searching</p>';
                }
            }, 300));

            // Close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (!globalSearch.contains(e.target) && !searchDropdown.contains(e.target)) {
                    searchDropdown.classList.add('hidden');
                }
            });
        }

        // Refresh suggestions
        const refreshSuggestionsBtn = document.getElementById('refresh-suggestions');
        if (refreshSuggestionsBtn) {
            refreshSuggestionsBtn.addEventListener('click', async function() {
                const suggestedUsersContainer = document.getElementById('suggested-users-container');
                if (!suggestedUsersContainer) return;

                // Add loading animation
                this.classList.add('animate-spin');

                try {
                    const response = await fetch('/api/users/suggestions?refresh=true');
                    const users = await response.json();

                    if (users.length === 0) {
                        suggestedUsersContainer.innerHTML = '<p class="text-gray-500 p-4 text-center">No suggestions available</p>';
                        return;
                    }

                    let html = '';
                    users.forEach(user => {
                        html += `
                            <div class="p-4 hover:bg-gray-800 transition-colors flex items-center justify-between">
                                <a href="/users/${user.username}" class="flex items-center">
                                    <img src="${user.profileImage}" alt="${user.name}" class="w-10 h-10 rounded-full mr-3 bg-gray-300 object-cover">
                                    <div>
                                        <div class="flex items-center">
                                            <span class="font-bold">${user.name}</span>
                                            ${user.isVerified ? '<i class="fa-solid fa-circle-check text-blue-500 text-sm ml-1"></i>' : ''}
                                        </div>
                                        <p class="text-gray-500">@${user.username}</p>
                                    </div>
                                </a>
                                <form action="/users/${user.username}/follow" method="POST" class="follow-form">
                                    <button type="submit" class="bg-white text-black rounded-full px-4 py-1.5 font-bold transition-colors hover:bg-gray-200">Follow</button>
                                </form>
                            </div>
                        `;
                    });

                    suggestedUsersContainer.innerHTML = html;

                    // Add event listeners to new follow forms
                    setupFollowForms();

                } catch (error) {
                    console.error('Error refreshing suggestions:', error);
                } finally {
                    // Remove loading animation
                    this.classList.remove('animate-spin');
                }
            });
        }

        // Setup follow forms for AJAX submission
        function setupFollowForms() {
            document.querySelectorAll('.follow-form').forEach(form => {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();

                    const button = this.querySelector('button');
                    const originalText = button.textContent;
                    button.disabled = true;

                    try {
                        const response = await fetch(this.action, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        });

                        const data = await response.json();

                        if (data.success) {
                            if (this.action.includes('/follow')) {
                                button.textContent = 'Following';
                                button.classList.remove('bg-white', 'text-black', 'hover:bg-gray-200');
                                button.classList.add('bg-transparent', 'border', 'border-gray-600', 'text-white', 'hover:bg-gray-800');
                                this.action = this.action.replace('/follow', '/unfollow');
                            } else {
                                button.textContent = 'Follow';
                                button.classList.remove('bg-transparent', 'border', 'border-gray-600', 'text-white', 'hover:bg-gray-800');
                                button.classList.add('bg-white', 'text-black', 'hover:bg-gray-200');
                                this.action = this.action.replace('/unfollow', '/follow');
                            }
                        } else {
                            throw new Error(data.message || 'Failed to update follow status');
                        }
                    } catch (error) {
                        console.error('Error updating follow status:', error);
                        button.textContent = originalText;
                    } finally {
                        button.disabled = false;
                    }
                });
            });
        }

        // Initial setup
        setupFollowForms();

        // Debounce function
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
    });
</script>